{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/assignment-details/assignment-details.component.ts","./src/app/components/assignment-details/assignment-details.component.html","./src/app/components/assignment/assignment.component.ts","./src/app/components/assignment/assignment.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/forgot-password/user-confirm/user-confirm.component.ts","./src/app/components/forgot-password/user-confirm/user-confirm.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/interceptors/token.interceptor.ts","./src/app/services/assignment.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from \"./components/login/login.component\";\nimport {AssignmentComponent} from \"./components/assignment/assignment.component\";\nimport {AuthGuardService} from \"./services/auth-guard.service\";\nimport {AssignmentDetailsComponent} from \"./components/assignment-details/assignment-details.component\";\nimport {SignupComponent} from \"./components/signup/signup.component\";\nimport {ForgotPasswordComponent} from \"./components/forgot-password/forgot-password.component\";\nimport {UserConfirmComponent} from \"./components/forgot-password/user-confirm/user-confirm.component\";\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'forgotPassword', component: ForgotPasswordComponent },\n  { path: 'userConfirm', component: UserConfirmComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'assignments', component: AssignmentComponent, canActivate: [AuthGuardService] },\n  { path: 'assignment/:id', component: AssignmentDetailsComponent, canActivate: [AuthGuardService] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AssignmentComponent } from './components/assignment/assignment.component';\nimport { JwtHelperService, JWT_OPTIONS} from \"@auth0/angular-jwt\";\nimport { AssignmentDetailsComponent } from './components/assignment-details/assignment-details.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { TokenInterceptor } from \"./interceptors/token.interceptor\";\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { UserConfirmComponent } from './components/forgot-password/user-confirm/user-confirm.component';\n\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    AssignmentComponent,\n    AssignmentDetailsComponent,\n    FooterComponent,\n    SignupComponent,\n    ForgotPasswordComponent,\n    UserConfirmComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    JwtHelperService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnChanges, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AssignmentService} from \"../../services/assignment.service\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\n\n\n@Component({\n  selector: 'app-assignment-details',\n  templateUrl: './assignment-details.component.html',\n  styleUrls: ['./assignment-details.component.css']\n})\nexport class AssignmentDetailsComponent implements OnInit{\n  activatedRouteSub: any;\n  errorMessage: string;\n  assignmentId: string;\n  assignment: any;\n  assignmentForm: any;\n  fields: object = {};\n  userAnswers: Array<{questionId: string, userAnswer: string}> = [];\n  constructor(private route: ActivatedRoute, private router: Router, private assignmentService: AssignmentService,\n              private fb: FormBuilder, private authService: AuthenticationService) {\n\n  }\n\n  ngOnInit(): void {\n    this.activatedRouteSub = this.route.params.subscribe(params => {\n      this.assignmentId = params.id\n      if (!this.assignmentId) {\n        this.router.navigate(['/']);\n        return;\n      }\n\n      this.assignmentService.getAssignmentDetails(this.assignmentId).subscribe(response => {\n        this.assignment = response;\n        if (response.status === 200){\n          if(response.body && response.body.token && response.body.assignment) {\n            this.authService.saveToken(response.body.token)\n            this.assignment = response.body.assignment;\n            this.assignment.questions.forEach(question => {\n              this.fields[`${question._id}`] = this.fb.control([''], Validators.required)\n            })\n            this.assignmentForm = this.fb.group(this.fields);\n          }\n        }\n      }, error => {\n        console.error(error);\n        this.errorMessage = error.error.message;\n      })\n    })\n  }\n\n\n  onSubmit(userAnswers): void {\n\n    this.assignment.questions.forEach(question => {\n      this.userAnswers.push({questionId: question._id, userAnswer: userAnswers.controls[`${question._id}`].value})\n    })\n\n    this.assignmentService.submitAssignment(this.userAnswers, this.assignmentId).subscribe(response => {\n      if (response.status === 200) {\n        this.router.navigate(['/assignments'])\n      }\n    })\n  }\n\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\" *ngIf=\"assignment\">\n  <div class=\"row align-items-sm-center mb-4\">\n    <h1 class=\"mb-4\">{{assignment.title}}</h1>\n    <a class='btn btn-outline-success ml-auto' routerLink=\"/assignments\">Go Back</a>\n\n  </div>\n  <div *ngIf=\"assignmentForm\">\n    <form [formGroup]=\"assignmentForm\" (ngSubmit)=\"onSubmit(assignmentForm)\">\n      <div class=\"row align-items-sm-center mb-4\" *ngFor=\"let question of assignment.questions\">\n        <div class=\"col justify-content-sm-center\">\n          <fieldset>\n            <div class=\"card\" >\n              <div class=\"card-header\">\n                {{question.question}}\n              </div>\n              <div class=\"card-body\">\n                <div class=\"form-group list-group-flush\" *ngFor=\"let choice of question.choices; let i=index\">\n                  <label class=\" list-group-item list-group-item-action\">\n                    <input [formControlName]=\"question._id\" type=\"radio\" class=\"form-check-input\" value={{choice}}>{{choice}}\n                  </label>\n                </div>\n              </div>\n            </div>\n\n          </fieldset>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AssignmentService} from \"../../services/assignment.service\";\nimport {Router} from \"@angular/router\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\n\n@Component({\n  selector: 'app-assignment',\n  templateUrl: './assignment.component.html',\n  styleUrls: ['./assignment.component.css']\n})\nexport class AssignmentComponent implements OnInit {\n  assignments: any;\n  overallGrade: any;\n  errorMessage: string;\n  constructor(private assignmentService: AssignmentService, private router: Router, private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.assignmentService.getAllAssignment().subscribe(response => {\n      if (response.status === 200){\n        if(response.body && response.body.token && response.body.assignments) {\n          this.authService.saveToken(response.body.token)\n          this.assignments = response.body.assignments;\n          if (response.body.overallGrade) {\n            this.overallGrade = response.body.overallGrade;\n          }\n        }\n      }\n    }, error => {\n      console.error(error);\n      this.errorMessage = error.error.message;\n    })\n  }\n\n  takeAssessment(id: string): void {\n    this.router.navigate([`/assignment/${id}`]);\n  }\n\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\">\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h1 class=\"mb-4\">Assignments</h1>\n    <h6 class=\"mb-4\" *ngIf=\"overallGrade\">Grade: {{overallGrade | number: '1.2-2' }}%</h6>\n  </div>\n  <div class=\"row align-items-sm-center mb-4\" *ngFor=\"let assignment of assignments\">\n    <div class=\"col justify-content-sm-center\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h3>{{assignment.title}}</h3>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"d-flex justify-content-between\">\n            <span>Due {{assignment.date | date:'fullDate'}}</span>\n            <button *ngIf=\"!assignment.grade; else noGrade\" type=\"button\" class=\"btn btn-success ml-5\" (click)=\"takeAssessment(assignment._id)\">Take Assessment</button>\n            <ng-template #noGrade>\n              <span class=\"badge badge-pill badge-info ml-5\">Score: {{assignment.grade}}%</span>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col text-center py-3\">\n        Copyright &copy; Minds Tech LLC\n      </div>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm = new FormGroup({\n    email: new FormControl('', Validators.required),\n    fullName: new FormControl('', Validators.required),\n    securityQuestion: new FormControl('', Validators.required),\n    securityAnswer: new FormControl('', Validators.required),\n  });\n  errorMessage: string;\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  checkUser(): void {\n    if (this.forgotPasswordForm.get('email').value && this.forgotPasswordForm.get('fullName').value &&\n        this.forgotPasswordForm.get('securityQuestion').value && this.forgotPasswordForm.get('securityAnswer').value) {\n        this.authService.checkUser(\n          this.forgotPasswordForm.get('email').value,\n          this.forgotPasswordForm.get('fullName').value,\n          this.forgotPasswordForm.get('securityQuestion').value,\n          this.forgotPasswordForm.get('securityAnswer').value).subscribe((response) => {\n        if (response.status === 200){\n          if(response.body && response.body.email && response.body.token && response.body.isAnswerCorrect) {\n            this.authService.saveUserDetails(response.body)\n            this.router.navigate(['/userConfirm'])\n          } else {\n            this.errorMessage = 'You have entered incorrect values. Try Again.'\n          }\n        }\n      }, error => {\n        console.error(error);\n        this.errorMessage = error.error.message;\n      })\n    }\n  }\n\n  clearError(): void {\n    this.errorMessage = '';\n  }\n\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\">\n  <div class=\"row align-items-sm-center\">\n    <div class=\"col\">\n      <div class=\"justify-content-sm-center\">\n        <div class=\"card\" >\n          <div *ngIf=\"errorMessage\" class=\"alert alert-dismissible alert-danger\">\n            <button (click)=\"clearError()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n            <strong>Error </strong>{{errorMessage}}\n          </div>\n          <div class=\"card-header\">Login</div>\n          <div class=\"card-body\">\n            <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"checkUser()\">\n              <div class=\"form-group\">\n                <label>Email address</label>\n                <input name=\"email\" type=\"email\" class=\"form-control\" formControlName=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label>Full Name</label>\n                <input name=\"fullName\" type=\"text\" class=\"form-control\" formControlName=\"fullName\">\n              </div>\n              <div class=\"form-group\">\n                <label>Select Security Question</label>\n                <select class=\"form-control\" formControlName=\"securityQuestion\">\n                  <option value=\"What is your mother's maiden name?\">What is your mother's maiden name?</option>\n                  <option value=\"What is your favorite subject at IIA?\">What is your favorite subject at IIA?</option>\n                  <option value=\"What is your childhood best friend's name?\">What is your childhood best friend's name?</option>\n                  <option value=\"What is your first grade teacher's first name\">What is your first grade teacher's first name</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label>Security Answer</label>\n                <input name=\"securityAnswer\" type=\"text\" class=\"form-control\" formControlName=\"securityAnswer\">\n              </div>\n              <div class=\"d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn btn-primary\">Confirm</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {AuthenticationService} from \"../../../services/authentication.service\";\n\n@Component({\n  selector: 'app-user-confirm',\n  templateUrl: './user-confirm.component.html',\n  styleUrls: ['./user-confirm.component.css']\n})\nexport class UserConfirmComponent implements OnInit {\n\n  confirmNewPasswordForm = new FormGroup({\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required),\n  });\n  errorMessage: string;\n  constructor(private router: Router, private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  createNewPassword(): void {\n    let password = this.confirmNewPasswordForm.get('password').value;\n    let confirmPassword = this.confirmNewPasswordForm.get('confirmPassword').value;\n    if (password === confirmPassword) {\n\n      this.authService.changePassword(password).subscribe(response => {\n        if (response.status === 200){\n          if(response.body && response.body.token && response.body.email) {\n            this.authService.saveUserDetails(response.body)\n            this.router.navigate(['/assignments'])\n          }\n        }\n      }, error => {\n        console.log('here');\n        console.error(error);\n        this.errorMessage = error.error.message;\n      })\n    } else {\n      this.errorMessage = 'Passwords do no match';\n    }\n  }\n\n  clearError(): void {\n    this.errorMessage = '';\n  }\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\">\n  <div class=\"row align-items-sm-center\">\n    <div class=\"col\">\n      <div class=\"justify-content-sm-center\">\n        <div class=\"card\" >\n          <div *ngIf=\"errorMessage\" class=\"alert alert-dismissible alert-danger\">\n            <button (click)=\"clearError()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n            <strong>Error </strong>{{errorMessage}}\n          </div>\n          <div class=\"card-header\">Login</div>\n          <div class=\"card-body\">\n            <form [formGroup]=\"confirmNewPasswordForm\" (ngSubmit)=\"createNewPassword()\">\n              <div class=\"form-group\">\n                <label>Password</label>\n                <input name=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\n              </div>\n              <div class=\"form-group\">\n                <label>Confirm Password</label>\n                <input name=\"password\" type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n              </div>\n              <div class=\"d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn btn-primary\">Confirm</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  isRouterLogin: boolean;\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.isRouterLogin = this.router.url === '/login'\n  }\n\n  public logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/'])\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.authService.isAuthenticated();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a class=\"navbar-brand\" href=\"/\">Study Portal</a>\n\n  <ul class=\"navbar-nav justify-content-end\">\n\n    <ng-container\n      *ngIf=\"isAuthenticated; then loggedIn; else loggedOut\">\n    </ng-container>\n\n    <ng-template #loggedIn>\n      <li class=\"nav-item\">\n        <a (click)=\"logout()\" class=\"nav-link active\" href=\"/\">Logout</a>\n      </li>\n    </ng-template>\n\n    <ng-template #loggedOut [ngIf]=\"isRouterLogin\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"/signup\">Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link active\" routerLink=\"/\">Login</a>\n      </li>\n    </ng-template>\n\n\n\n  </ul>\n</nav>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from \"../../services/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  errorMessage: string\n  constructor(public authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n    if(this.authService.isAuthenticated()) {\n      this.router.navigate(['/assignments']);\n    }\n  }\n\n  login(): void {\n    if (this.email && this.password) {\n      this.authService.login(this.email, this.password).subscribe((response) => {\n        if (response.status === 200){\n          if(response.body && response.body.token && response.body.email) {\n            this.authService.saveUserDetails(response.body)\n            this.router.navigate(['/assignments'])\n          }\n        }\n      }, error => {\n        console.error(error);\n        this.errorMessage = error.error.message;\n      })\n    }\n  }\n\n  clearError(): void {\n    this.errorMessage = '';\n  }\n\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\">\n  <div class=\"row align-items-sm-center\">\n    <div class=\"col\">\n      <div class=\"justify-content-sm-center\">\n        <div class=\"card\" >\n          <div *ngIf=\"errorMessage\" class=\"alert alert-dismissible alert-danger\">\n            <button (click)=\"clearError()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n            <strong>Error </strong>{{errorMessage}}\n          </div>\n          <div class=\"card-header\">Login</div>\n          <div class=\"card-body\">\n            <form>\n              <div class=\"form-group\">\n                <label>Email address</label>\n                <input [(ngModel)]=\"email\" name=\"email\" type=\"email\" class=\"form-control\">\n              </div>\n              <div class=\"form-group\">\n                <label>Password</label>\n                <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" class=\"form-control\" >\n              </div>\n              <small>Forgot Password? <a routerLink=\"/forgotPassword\">Click here</a></small>\n              <div class=\"d-flex justify-content-center\">\n                <button (click)=\"login()\" type=\"submit\" class=\"d-flex justify-content-center btn btn-primary \">Login</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm = new FormGroup({\n    email: new FormControl('', Validators.required),\n    fullName: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required),\n    securityQuestion: new FormControl('', Validators.required),\n    securityAnswer: new FormControl('', Validators.required),\n  });\n  errorMessage: string\n  constructor(public authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  signup(): void {\n    if (this.signupForm.get('email').value && this.signupForm.get('fullName').value &&\n      this.signupForm.get('password').value && this.signupForm.get('confirmPassword').value &&\n      this.signupForm.get('securityQuestion').value && this.signupForm.get('securityAnswer').value) {\n      if (this.signupForm.get('password').value === this.signupForm.get('confirmPassword').value) {\n        this.authService.signUp(\n          this.signupForm.get('email').value,\n          this.signupForm.get('fullName').value,\n          this.signupForm.get('password').value,\n          this.signupForm.get('securityQuestion').value,\n          this.signupForm.get('securityAnswer').value).subscribe((response) => {\n          if (response.status === 200){\n            if(response.body && response.body.token && response.body.email) {\n              this.authService.saveUserDetails(response.body)\n              this.router.navigate(['/assignments'])\n            }\n          }\n        }, error => {\n          console.error(error);\n          this.errorMessage = error.error.message;\n        })\n      }\n    }\n  }\n\n  clearError(): void {\n    this.errorMessage = '';\n  }\n\n}\n","<div class=\"container-sm mt-5\" style=\"max-width: 35rem;\">\n  <div class=\"row align-items-sm-center\">\n    <div class=\"col\">\n      <div class=\"justify-content-sm-center\">\n        <div class=\"card\" >\n          <div *ngIf=\"errorMessage\" class=\"alert alert-dismissible alert-danger\">\n            <button (click)=\"clearError()\" type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n            <strong>Error </strong>{{errorMessage}}\n          </div>\n          <div class=\"card-header\">Login</div>\n          <div class=\"card-body\">\n            <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\n              <div class=\"form-group\">\n                <label>Email address</label>\n                <input name=\"email\" type=\"email\" class=\"form-control\" formControlName=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label>Full Name</label>\n                <input name=\"fullName\" type=\"text\" class=\"form-control\" formControlName=\"fullName\">\n              </div>\n              <div class=\"form-group\">\n                <label>Password</label>\n                <input name=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\n              </div>\n              <div class=\"form-group\">\n                <label>Confirm Password</label>\n                <input name=\"password\" type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n              </div>\n              <div class=\"form-group\">\n                <label>Select Security Question</label>\n                <select class=\"form-control\" formControlName=\"securityQuestion\">\n                  <option value=\"What is your mother's maiden name?\">What is your mother's maiden name?</option>\n                  <option value=\"What is your favorite subject at IIA?\">What is your favorite subject at IIA?</option>\n                  <option value=\"What is your childhood best friend's name?\">What is your childhood best friend's name?</option>\n                  <option value=\"What is your first grade teacher's first name\">What is your first grade teacher's first name</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label>Security Answer</label>\n                <input name=\"securityAnswer\" type=\"text\" class=\"form-control\" formControlName=\"securityAnswer\">\n              </div>\n              <div class=\"d-flex justify-content-center\">\n                <button type=\"submit\" class=\"btn btn-primary\">Sign Up</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthenticationService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.url.indexOf('/login') !== -1 || request.url.indexOf('/register') !== -1 || request.url.indexOf('/checkUser') !== -1) {\r\n      return next.handle(request);\r\n    } else if (this.auth.getToken()) {\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${this.auth.getToken()}`\r\n          }\r\n        });\r\n      return next.handle(request);\r\n    } else {\r\n\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport {AuthenticationService} from \"./authentication.service\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssignmentService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\n\n  public getAllAssignment(): Observable<HttpResponse<any>> {\n    return this.http.get(`/api/assignments`, {observe: 'response'});\n  }\n\n  public getAssignmentDetails(id: string): Observable<HttpResponse<any>> {\n    return this.http.get(`/api/assignments/${id}`, {observe: 'response'});\n  }\n\n  public submitAssignment(userAnswers: object, assignmentId: string): Observable<HttpResponse<any>> {\n    return this.http.post(`/api/assignments/${assignmentId}`, {userAnswers}, {observe: 'response'})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from \"@angular/router\";\nimport {AuthenticationService} from \"./authentication.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router, public auth: AuthenticationService) { }\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['/']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {User} from \"../models/User\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) { }\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token)\n  }\n\n  public login(email, password): Observable<HttpResponse<any>> {\n    return this.http.post<any>(`/api/user/login`, {email, password}, {observe: 'response'})\n  }\n\n  public signUp(email, fullName, password, securityQuestion, securityAnswer): Observable<HttpResponse<any>> {\n    return this.http.post<any>(`/api/user/register`,\n      {email: email,\n        name: fullName,\n        password: password,\n        securityQuestion: securityQuestion,\n        securityAnswer: securityAnswer\n      }, {observe: 'response'});\n  }\n\n  public checkUser(email, name, securityQuestion, securityAnswer): Observable<HttpResponse<any>> {\n    return this.http.post<any>(`/api/user/checkUser`,\n      {email, name, securityQuestion, securityAnswer}, {observe: 'response'});\n  }\n\n  public changePassword(password): Observable<HttpResponse<any>> {\n    return this.http.post<any>(`/api/user/changePassword`, {password}, {observe: \"response\"});\n  }\n\n  public saveUserDetails(userObject: User): void {\n    localStorage.setItem('email', userObject.email);\n    localStorage.setItem('token', userObject.token);\n  }\n\n  public saveEmail(email: string): void {\n    localStorage.setItem('email', email);\n  }\n\n  public saveToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  public getToken(): String {\n    return localStorage.getItem('token');\n  }\n\n  public getEmail(): string {\n    return localStorage.getItem('email');\n  }\n\n  public logout(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}